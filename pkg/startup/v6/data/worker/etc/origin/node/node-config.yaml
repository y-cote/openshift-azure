apiVersion: v1
authConfig:
  authenticationCacheSize: 1000
  authenticationCacheTTL: 5m
  authorizationCacheSize: 1000
  authorizationCacheTTL: 5m
dnsBindAddress: 127.0.0.1:53
dnsDomain: cluster.local
dnsIP: 0.0.0.0
dnsRecursiveResolvConf: /etc/origin/node/resolv.conf
dockerConfig:
  dockerShimRootDirectory: /var/lib/dockershim
  dockerShimSocket: /var/run/dockershim.sock
  execHandlerName: native
enableUnidling: true
imageConfig:
  format: {{ .Config.Images.Format | quote }}
  latest: false
iptablesSyncPeriod: 30s
kind: NodeConfig
kubeletArguments:
  bootstrap-kubeconfig:
  - /etc/origin/node/bootstrap.kubeconfig
  cert-dir:
  - /etc/origin/node/certificates
  cloud-config:
  - /etc/origin/cloudprovider/azure.conf
  cloud-provider:
  - azure
  enable-controller-attach-detach:
  - "true"
  feature-gates:
  - RotateKubeletClientCertificate=true,RotateKubeletServerCertificate=true
  max-pods:
  - "50"
  node-labels:
  - {{ print "node-role.kubernetes.io/" .Role "=true" | quote }}
  pod-manifest-path:
  - /etc/origin/node/pods
  rotate-certificates:
  - "true"
  runtime-request-timeout:
  - 10m
  kube-reserved:
  - {{ .Derived.KubeReserved .ContainerService .Role | quote }}
  serialize-image-pulls:
  - "false"
  system-reserved:
  - {{ .Derived.SystemReserved .ContainerService .Role | quote }}
masterClientConnectionOverrides:
  acceptContentTypes: application/vnd.kubernetes.protobuf,application/json
  burst: 40
  contentType: application/vnd.kubernetes.protobuf
  qps: 20
masterKubeConfig: node.kubeconfig
networkConfig:
  mtu: 1450
  networkPluginName: redhat/openshift-ovs-networkpolicy
proxyArguments:
  cluster-cidr:
  - 10.128.0.0/14
servingInfo:
  bindAddress: 0.0.0.0:10250
  bindNetwork: tcp4
  clientCA: ca.crt
volumeConfig:
  localQuota:
    perFSGroup: 1Gi
volumeDirectory: /var/lib/origin/openshift.local.volumes
